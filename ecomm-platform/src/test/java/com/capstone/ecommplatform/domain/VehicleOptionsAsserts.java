package com.capstone.ecommplatform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleOptionsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleOptionsAllPropertiesEquals(VehicleOptions expected, VehicleOptions actual) {
        assertVehicleOptionsAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleOptionsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleOptionsAllUpdatablePropertiesEquals(VehicleOptions expected, VehicleOptions actual) {
        assertVehicleOptionsUpdatableFieldsEquals(expected, actual);
        assertVehicleOptionsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleOptionsAutoGeneratedPropertiesEquals(VehicleOptions expected, VehicleOptions actual) {
        assertThat(expected)
            .as("Verify VehicleOptions auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleOptionsUpdatableFieldsEquals(VehicleOptions expected, VehicleOptions actual) {
        assertThat(expected)
            .as("Verify VehicleOptions relevant properties")
            .satisfies(e -> assertThat(e.getEstimatedMileage()).as("check estimatedMileage").isEqualTo(actual.getEstimatedMileage()))
            .satisfies(e -> assertThat(e.getEngine()).as("check engine").isEqualTo(actual.getEngine()))
            .satisfies(e -> assertThat(e.getDrivetrain()).as("check drivetrain").isEqualTo(actual.getDrivetrain()))
            .satisfies(e -> assertThat(e.getTransmission()).as("check transmission").isEqualTo(actual.getTransmission()))
            .satisfies(e -> assertThat(e.getTrim()).as("check trim").isEqualTo(actual.getTrim()))
            .satisfies(e -> assertThat(e.getColor()).as("check color").isEqualTo(actual.getColor()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleOptionsUpdatableRelationshipsEquals(VehicleOptions expected, VehicleOptions actual) {}
}
