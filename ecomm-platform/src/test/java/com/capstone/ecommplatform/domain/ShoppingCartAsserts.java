package com.capstone.ecommplatform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ShoppingCartAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoppingCartAllPropertiesEquals(ShoppingCart expected, ShoppingCart actual) {
        assertShoppingCartAutoGeneratedPropertiesEquals(expected, actual);
        assertShoppingCartAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoppingCartAllUpdatablePropertiesEquals(ShoppingCart expected, ShoppingCart actual) {
        assertShoppingCartUpdatableFieldsEquals(expected, actual);
        assertShoppingCartUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoppingCartAutoGeneratedPropertiesEquals(ShoppingCart expected, ShoppingCart actual) {
        assertThat(expected)
            .as("Verify ShoppingCart auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoppingCartUpdatableFieldsEquals(ShoppingCart expected, ShoppingCart actual) {
        assertThat(expected)
            .as("Verify ShoppingCart relevant properties")
            .satisfies(e -> assertThat(e.getShopperId()).as("check shopperId").isEqualTo(actual.getShopperId()))
            .satisfies(e -> assertThat(e.getVehicleId()).as("check vehicleId").isEqualTo(actual.getVehicleId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShoppingCartUpdatableRelationshipsEquals(ShoppingCart expected, ShoppingCart actual) {}
}
