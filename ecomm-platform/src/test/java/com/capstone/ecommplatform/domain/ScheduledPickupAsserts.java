package com.capstone.ecommplatform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ScheduledPickupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledPickupAllPropertiesEquals(ScheduledPickup expected, ScheduledPickup actual) {
        assertScheduledPickupAutoGeneratedPropertiesEquals(expected, actual);
        assertScheduledPickupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledPickupAllUpdatablePropertiesEquals(ScheduledPickup expected, ScheduledPickup actual) {
        assertScheduledPickupUpdatableFieldsEquals(expected, actual);
        assertScheduledPickupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledPickupAutoGeneratedPropertiesEquals(ScheduledPickup expected, ScheduledPickup actual) {
        assertThat(expected)
            .as("Verify ScheduledPickup auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledPickupUpdatableFieldsEquals(ScheduledPickup expected, ScheduledPickup actual) {
        assertThat(expected)
            .as("Verify ScheduledPickup relevant properties")
            .satisfies(e -> assertThat(e.getShopperId()).as("check shopperId").isEqualTo(actual.getShopperId()))
            .satisfies(e -> assertThat(e.getOrderId()).as("check orderId").isEqualTo(actual.getOrderId()))
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledPickupUpdatableRelationshipsEquals(ScheduledPickup expected, ScheduledPickup actual) {}
}
