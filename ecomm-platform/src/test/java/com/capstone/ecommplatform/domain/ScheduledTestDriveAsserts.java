package com.capstone.ecommplatform.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ScheduledTestDriveAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledTestDriveAllPropertiesEquals(ScheduledTestDrive expected, ScheduledTestDrive actual) {
        assertScheduledTestDriveAutoGeneratedPropertiesEquals(expected, actual);
        assertScheduledTestDriveAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledTestDriveAllUpdatablePropertiesEquals(ScheduledTestDrive expected, ScheduledTestDrive actual) {
        assertScheduledTestDriveUpdatableFieldsEquals(expected, actual);
        assertScheduledTestDriveUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledTestDriveAutoGeneratedPropertiesEquals(ScheduledTestDrive expected, ScheduledTestDrive actual) {
        assertThat(expected)
            .as("Verify ScheduledTestDrive auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledTestDriveUpdatableFieldsEquals(ScheduledTestDrive expected, ScheduledTestDrive actual) {
        assertThat(expected)
            .as("Verify ScheduledTestDrive relevant properties")
            .satisfies(e -> assertThat(e.getShopperId()).as("check shopperId").isEqualTo(actual.getShopperId()))
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertScheduledTestDriveUpdatableRelationshipsEquals(ScheduledTestDrive expected, ScheduledTestDrive actual) {}
}
